==========================================================================================================
The RANK() function in Hive is a window function used to assign ranks to rows based on a specified column,
with gaps when values are the same (ties).

Syntax

RANK() OVER (PARTITION BY column ORDER BY column)

==========================================================================================================

Example:

CREATE TABLE employee (
    id INT,
    name STRING,
    department STRING,
    salary FLOAT
)
STORED AS ORC;

==========================================================================================================

Insert Sample Data

INSERT INTO employee VALUES 
(1, 'Alice', 'HR', 50000),
(2, 'Bob', 'IT', 60000),
(3, 'Charlie', 'IT', 70000),
(4, 'David', 'HR', 55000),
(5, 'Eve', 'IT', 80000),
(6, 'Frank', 'IT', 70000);

==========================================================================================================

Ranking Employees by Salary (Without Partitioning)

SELECT id, name, department, salary,
       RANK() OVER (ORDER BY salary DESC) AS rank
FROM employee;

Output

id  | name    | department | salary  | rank
------------------------------------------
5   | Eve     | IT        | 80000   | 1
3   | Charlie | IT        | 70000   | 2
6   | Frank   | IT        | 70000   | 2
2   | Bob     | IT        | 60000   | 4
4   | David   | HR        | 55000   | 5
1   | Alice   | HR        | 50000   | 6

==========================================================================================================

Ranking Within Each Department (PARTITION BY)

SELECT id, name, department, salary,
       RANK() OVER (PARTITION BY department ORDER BY salary DESC) AS rank
FROM employee;

Output

id  | name    | department | salary  | rank
------------------------------------------
4   | David   | HR        | 55000   | 1
1   | Alice   | HR        | 50000   | 2
5   | Eve     | IT        | 80000   | 1
3   | Charlie | IT        | 70000   | 2
6   | Frank   | IT        | 70000   | 2
2   | Bob     | IT        | 60000   | 4

==========================================================================================================
==========================================================================================================
==========================================================================================================
==========================================================================================================
